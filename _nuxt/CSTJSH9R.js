import{e as d,v as k,x as P,l as N,y as x,z as j,A as l,B as R,C as L,D as S,E as _,i as h,G as y,m as w,H as A,S as O,I as v,J as T,P as c,L as B}from"#entry";const E=d({name:"LayoutLoader",inheritAttrs:!1,props:{name:String,layoutProps:Object},setup(e,a){return()=>y(l[e.name],e.layoutProps,a.slots)}}),C={name:{type:[String,Boolean,Object],default:null},fallback:{type:[String,Object],default:null}},U=d({name:"NuxtLayout",inheritAttrs:!1,props:C,setup(e,a){const t=k(),n=L(c),u=!n||n===P()?R():n,o=N(()=>{let s=h(e.name)??u?.meta.layout??"default";return s&&!(s in l)&&e.fallback&&(s=h(e.fallback)),s}),i=x();a.expose({layoutRef:i});const r=t.deferHydration();if(t.isHydrating){const s=t.hooks.hookOnce("app:error",r);j().beforeEach(s)}let f;return()=>{const s=o.value&&o.value in l,p=u?.meta.layoutTransition??S,b=f;return f=o.value,_(s&&p,{default:()=>y(O,{suspensible:!0,onResolve:()=>{A(r)}},{default:()=>y(H,{layoutProps:w(a.attrs,{ref:i}),key:o.value||void 0,name:o.value,shouldProvide:!e.name,isRenderingNewLayout:m=>m!==b&&m===o.value,hasTransition:!!p},a.slots)})}).default()}}}),H=d({name:"NuxtLayoutProvider",inheritAttrs:!1,props:{name:{type:[String,Boolean]},layoutProps:{type:Object},hasTransition:{type:Boolean},shouldProvide:{type:Boolean},isRenderingNewLayout:{type:Function,required:!0}},setup(e,a){const t=e.name;e.shouldProvide&&v(B,{isCurrent:u=>t===(u.meta.layout??"default")});const n=L(c);if(n&&n===P()){const u=R(),o={};for(const i in u){const r=i;Object.defineProperty(o,r,{enumerable:!0,get:()=>e.isRenderingNewLayout(e.name)?u[r]:n[r]})}v(c,T(o))}return()=>!t||typeof t=="string"&&!(t in l)?a.slots.default?.():y(E,{key:t,layoutProps:e.layoutProps,name:t},a.slots)}});export{U as _};
